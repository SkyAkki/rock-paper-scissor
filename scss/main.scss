// Colors
$primary-color : #ED3C1F;
$secondary-color : #EBE1CE;
$black : #262424;
$black-75 : #5d5b5b;
$black-50 : #939292;
$black-25 : #c9c8c8;
$black-10 : #e9e9e9;
$black-5  : #f4f4f4;

// Typography
$font-weights : (
    "regular" : 400,
    "medium" : 500,
    "bold" : 700
);
@font-face {
    font-family: JPHiragana;
    src: url(/fonts/NotoSansJP-Bold.otf);
}
@font-face {
    font-family: JPMedium;
    src: url(/fonts/NotoSansJP-Medium.otf);
}
@font-face {
    font-family: JPThin;
    src: url(/fonts/NotoSansJP-Thin.otf);
}

//Root Style
:root{
    font-size: 1vw;
    font-family: sans-serif;
    box-sizing: border-box;
    scroll-behavior:smooth
}


//Landing Page Starts--------------------------------------------------------------------------->
.welcome {
    background-color: $primary-color;
    display : flex;
    border : none;
    height: 100vh;
    justify-content: center;
}
.hero-outer {
    background-color: none;
    height: 80vh;
    width: 80vw;
    align-self: center;
    border-color: $secondary-color;
    border-radius: 10px;
    border-width: 3px;
    border-style: solid;
    display: flex;
    justify-content: center;
}

//Styles for Card flip
.hero-inner {
    background-color: $secondary-color;
    height: 80%;
    width: 90%;
    align-self: center;
    border-radius: 10px;
    position: relative;
    transition: transform 1s;
    transform-style: preserve-3d;
    perspective: 600px;
}
.card__face {
    position: absolute;
    height: 100%;
    width: 100%;
    backface-visibility: hidden;
}
.card__face--front {
    display: grid;
    grid-template-columns: 3fr 1fr;
}
.card__face--back {
    background: $secondary-color;
    transform: rotateY( 180deg );
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
}
.hero-inner.is-flipped {
    transform: rotateY(180deg);
  }


//Increase Emoji Size
li > span {
    font-size: 2em;
}
.trivia-list>li:nth-last-child(-n+2) {
    line-height: 2;
}


//Hero Section Styles
.title {
    align-self: center;
    justify-self: center;
    font-size: 7rem;
    font-family: JPMedium;
}
.trivia {
    align-self: start;
}

// Styles for Hiragana title in hero section
.hiragana::before {
    content: "{";
    color: $black;
}
.hiragana {
    font-family: JPHiragana;
    color: $primary-color;
    align-self: start;
    justify-self: center;
    font-size: 4rem;
}
.hiragana::after {
    content: "}";
    color: $black;
}


// Common Button Design with offset border
button{
    align-self: center;
    justify-self: start;
    display:inline-block;
    padding:0.3em 1.2em;
    border-radius:10px;
    font-size: 3rem;
    font-weight:300;
    color: $secondary-color;
    background-color:$primary-color;
    transition: all 0.2s;
    border: none;
    position: relative;
}
button::after {
    content: '';
    border-style: solid;
    border-width: 2px;
    border-color: $black;
    border-radius: 10px;
    width: 100%;
    height: 100%;
    position: absolute;
    line-height: 0px;
    top: 5px;
    left: -10px;
}

svg {
    width: 20%;
    align-self: end;
    justify-self: center;
}

//Landing Page Ends--------------------------------------------------------------------------->


.container {
    background: rgb(237,60,31);
    background: linear-gradient(180deg, rgba(237,60,31,1) 0%, rgba(235,225,206,1) 20%); 
    height: 100vh;
    width: 100vw;
    display: flex;
    flex-direction: column;
}
.letsplay {
    align-self: center;
}
.interface {
    display: grid;
    grid-template-columns: repeat(6,1fr);
    justify-content: center;
    gap: 10px;
    transition: opacity 2s linear;
}
.interface > h1 {
    grid-column: 1/-1;
    justify-self: center;
    font-size: 3rem;
}
.interface > .playerSelection {
    grid-column: 1/4;
    justify-self: center;
    border: 1px $black-75 solid;
    width: 50%;
    object-fit: contain;
}
.interface > .computerSelection {
    grid-column: 4/7;
    justify-self: center;
    width: 50%;
    object-fit: contain;
}
.interface > .PlayerWin {
    grid-column: 1/4;
    justify-self: center;
    font-size: 2rem;
    font-family: JPThin;
}
.interface > .ComputerWin {
    grid-column: 4/7;
    justify-self: center;
    font-size: 2rem;
    font-family: JPThin;
}
.interface > .Result {
    grid-column: 4/7;
    justify-self: center;
    align-self: center;
    font-size: 2rem;
    color: $primary-color;
    font-family: JPMedium;
}
.Buttons {
    justify-self: center;
}
.Button{
    font-size: 1em;
}
.Button > img {
    width: 100px;
    height: auto;
}
.Button:hover{
    scale: 1.3;
}
.buttonforplayers {
    grid-column: 1/4;
}

// Karaoke-text Style
.word-move {
    position: relative;
    white-space: nowrap;
    color: lightblue;
    text-shadow: 0 0 3px rgba(0,0,0,1); 
  }
  
  .word-move::after {
    content: attr(data-text);
    position: absolute;
    left: 0;
    top: 0;
    color: red;
    overflow: hidden;
    width: 40%;
    animation: run-text 2s 4 linear;
    text-shadow: 0 0 3px rgba(255,255,255,1); 
  }
  
  @keyframes run-text {
    from { width: 0 }
    to { width: 100% }
  }

  